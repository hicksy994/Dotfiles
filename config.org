* Emacs configuration
** Theme settings
*** Highlighting
**** Disable current line highlighting
#+BEGIN_SRC emacs-lisp
(setq global-hl-line-mode nil)
#+END_SRC

**** Disable smartparens highlighting
#+BEGIN_SRC emacs-lisp
(with-eval-after-load 'smartparens
  (show-smartparens-global-mode -1))
#+END_SRC

**** Disable highlighting on whitespace and new lines
#+BEGIN_SRC emacs-lisp
(setq sp-highlight-pair-overlay nil)
(setq sp-highlight-wrap-overlay nil)
(setq sp-highlight-wrap-tag-overlay nil)
(setq spacemacs-show-trailing-whitespace nil)
#+END_SRC

*** Powerline
**** Separator
#+BEGIN_SRC emacs-lisp
(setq powerline-default-separator 'nil)
#+END_SRC

**** Disable minor mode info
#+BEGIN_SRC emacs-lisp
(spaceline-toggle-minor-modes-off)
#+END_SRC

**** Compile on startup to apply settings
#+BEGIN_SRC emacs-lisp
(spaceline-compile)
#+END_SRC

** Major mode settings
*** Languages
**** C/C++
***** Enable eldoc-mode
#+BEGIN_SRC emacs-lisp
(add-hook 'c-mode-hook 'c-turn-on-eldoc-mode)
(add-hook 'c++-mode-hook 'c-turn-on-eldoc-mode)
#+END_SRC

***** Set style for indentation
#+BEGIN_SRC emacs-lisp
(setq c-default-style "k&r")
#+END_SRC

**** Rust
***** Autocomplete 
****** Set Racer and Rust source paths
#+BEGIN_SRC emacs-lisp
(setq racer-cmd "/usr/local/bin/racer")
(setq racer-rust-src-path "/usr/local/src/rust/src")
#+END_SRC

****** Turn on racer/company/eldoc
#+BEGIN_SRC emacs-lisp
(add-hook 'rust-mode-hook #'racer-mode)
(add-hook 'racer-mode-hook #'company-mode)
(add-hook 'racer-mode-hook #'eldoc-mode)
#+END_SRC

****** Turn off path annotation from autocomplete
#+BEGIN_SRC emacs-lisp
(setq company-racer-annotation-format "")
#+END_SRC

**** Java
***** Eclim
****** Set Eclim and Eclipse paths
#+BEGIN_SRC emacs-lisp
(setq eclim-eclipse-dirs "/usr/lib/eclipse"
      eclim-executable "/usr/lib/eclipse/eclim")
#+END_SRC

*** Org-mode
**** Allow Babel to execute source blocks in certain languages
#+BEGIN_SRC emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages '((C . t)
                             (emacs-lisp . t)
                             (java . t)))
#+END_SRC

**** Turn off line numbers 
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook
  (lambda() (linum-mode 0)))
#+END_SRC

**** Turn on text wrapping
#+BEGIN_SRC emacs-lisp
(add-hook 'org-mode-hook
          (lambda() (visual-line-mode t)))
#+END_SRC

**** Org-Capture TODO template
#+BEGIN_SRC emacs-lisp
(setq org-capture-templates
  '(("t" "Todo" entry (file+headline "~/org/Todo.org" "Todo")
     "* TODO  %?")))
#+END_SRC

**** Use downward arrow instead of ellipsis
#+BEGIN_SRC emacs-lisp
(setq org-ellipsis "â¤µ")
#+END_SRC

**** Make tabs act as if they were issued in a buffer of the language's major modes
#+BEGIN_SRC emacs-lisp
(setq org-src-tab-acts-natively t)
#+END_SRC

**** Use current window when editing a code snippet
#+BEGIN_SRC emacs-lisp
(setq org-src-window-setup 'current-window)
#+END_SRC

*** Conf-mode
**** Enable line numbers
#+BEGIN_SRC emacs-lisp
(add-hook 'conf-mode-hook 'linum-mode)
#+END_SRC

**** Enable company-mode
#+BEGIN_SRC emacs-lisp
(add-hook 'conf-mode-hook 'company-mode)
#+END_SRC

**** Enable smartparens-mode
#+BEGIN_SRC emacs-lisp
(add-hook 'conf-mode-hook 'smartparens-mode)
#+END_SRC

*** Term mode
**** Set keybinding for killing command
#+BEGIN_SRC emacs-lisp
(spacemacs/set-leader-keys-for-major-mode 'term-mode "q" 'term-kill-subjob)
#+END_SRC

**** Disable yasnippet
#+BEGIN_SRC emacs-lisp
(add-hook 'term-mode-hook
  (lambda() (setq yas-dont-activate t)))
#+END_SRC

** Misc
*** Set evil escape keymap to jk
#+BEGIN_SRC emacs-lisp
(setq-default evil-escape-key-sequence "jk")
#+END_SRC

*** Keep git info on modeline up to date
#+BEGIN_SRC emacs-lisp
(setq auto-revert-check-vc-info t)
#+END_SRC

*** Disable lockfile creation
#+BEGIN_SRC emacs-lisp
(setq create-lockfiles nil)
#+END_SRC

*** Disable evil shift rounding
#+BEGIN_SRC emacs-lisp
(setq-default evil-shift-round 'nil)
#+END_SRC

*** Set default browser
#+BEGIN_SRC emacs-lisp
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "google-chrome-stable")
#+END_SRC

*** Enable global camelCase motion
#+BEGIN_SRC emacs-lisp
 (spacemacs/toggle-camel-case-motion-globally-on)
#+END_SRC

